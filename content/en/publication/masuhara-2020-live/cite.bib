@inproceedings{masuhara2020live,
 abstract = {While applications of live programming are expanding to more practical and professional domains, most live programming environments (LPEs) are still developed for a single target language with an original code editor.  We propose an implementation framework for developing LPEs so that we can minimize efforts on implementing an LPE for a different target language and an existing code editor/IDE.  Our idea is to use a meta-JIT language implementation framework (e.g., Graal/Truffle and RPython) and LSP to separate core live programming implementations from language-specific and editor/IDE specific implementations.  This paper takes the Kanon live programming environment as a concrete example and discusses how we can design the framework to accommodate the features of Kanon.  Although the framework design is still underway, the paper presents a sketch of the framework APIs for separating language-specific functions and clarifies the requirements to LSP.},
 address = {Virtual},
 annote = {refereed},
 author = {Hidehiko Masuhara AND Shusuke Takahashi AND Yusuke Izawa AND Youyou Cong},
 booktitle = {Proceedings of the 6th Workshop on Live Programming},
 note = {\textbfRefereed. 5 pages},
 numpages = {5},
 pages = {1-5},
 series = {Live 2020},
 title = {Toward a Multi-Language and Multi-Environment Framework for Live Programming},
 url = {http://liveprog.org/live-2020/Toward-a-Multi-Language-and-Multi-Environment-Framework-for-Live-Programming/},
 year = {2020}
}
